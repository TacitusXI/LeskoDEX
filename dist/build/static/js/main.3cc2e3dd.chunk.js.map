{"version":3,"sources":["images/lesko.png","helpers.js","store/selectors.js","config.js","components/Navbar.js","store/actions.js","store/mockData.js","components/Spinner.js","components/OrderBook.js","store/interactions.js","components/Trades.js","components/MyTransactions.js","components/PriceChart.config.js","components/PriceChart.js","components/Balance.js","components/Orders.js","components/Content.js","components/App.js","store/reducers.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","ETHER_ADDRESS","GREEN","RED","ether","wei","tokens","formatBalance","balance","Math","round","account","state","get","accountSelector","createSelector","a","web3Selector","w","tokenLoaded","tokenSelector","tl","t","exchangeLoaded","exchangeSelector","el","e","contractsLoadedSelector","cancelledOrdersLoaded","cancelledOrders","loaded","filledOrdersLoaded","o","filledOrdersLoadedSelector","filledOrders","filledOrdersSelector","orders","sort","b","timestamp","decorateFilledOrders","previousOrder","map","order","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","tokenGive","amountGive","amountGet","tokenPrice","_objectSpread","formattedTimestamp","moment","unix","format","tokenPriceClass","id","orderId","openOrders","all","allOrders","filled","cancelled","console","log","length","slice","reject","orderFilled","some","orderCancelled","orderBookLoaded","allOrdersLoaded","orderBookLoadedSelector","orderBookSelector","decorateOrderBookOrders","groupBy","buyOrders","sellOrders","decorateOrderBookOrder","orderType","orderTypeClass","orderFillAction","myFilledOrdersLoadedSelector","myFilledOrdersSelector","filter","user","userFill","decorateMyFilledOrders","decorateMyFilledOrder","orderSign","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","decorateMyOpenOrder","priceChartLoadedSelector","priceChartSelector","secondLastOrder","lastOrder","lastPrice","lastPriceChange","series","data","buildGraphData","startOf","Object","keys","hour","group","open","high","maxBy","low","minBy","close","x","Date","y","orderCancellingSelector","status","orderFillingSelector","balancesLoadingSelector","etherBalanceSelector","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","etherDepositAmountSelector","amount","etherWithdrawAmountSelector","tokenDepositAmountSelector","tokenWithdrawAmountSelector","buyOrderSelector","sellOrderSelector","CONTRACT_ADDRESSES","5","Token","Exchange","11155111","999","Navbar","Component","render","React","createElement","Fragment","className","style","position","href","src","logo","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","background","color","padding","borderRadius","fontSize","fontWeight","marginRight","display","alignItems","gap","boxShadow","whiteSpace","role","concat","this","props","target","rel","connect","web3Loaded","connection","web3AccountLoaded","contract","etherBalanceLoaded","tokenBalanceLoaded","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","MOCK_ACCOUNT","MOCK_BALANCES","MOCK_CANCELLED_ORDERS","tokenGet","now","floor","MOCK_FILLED_ORDERS","generateTrades","trades","basePrice","otherUsers","myTradeCount","candle","candleStart","random","max","min","prices","i","price","timeOffset","useMyUser","push","String","MOCK_ALL_ORDERS","_ref","renderOrder","dispatch","exchange","OverlayTrigger","key","placement","overlay","Tooltip","onClick","fillOrder","methods","send","from","on","hash","error","window","alert","OrderBook","showOrderBook","orderBook","Spinner","orderFilling","Trades","showMyOpenOrders","myOpenOrders","cancelOrder","MyTransactions","Tabs","defaultActiveKey","Tab","eventKey","title","showMyFilledOrders","myFilledOrders","myOpenOrdersLoaded","orderCancelling","chartOptions","chart","animations","enabled","toolbar","show","plotOptions","candlestick","colors","upward","downward","wick","useFillColor","tooltip","theme","fontFamily","undefined","formatter","marker","items","fixed","offsetX","offsetY","xaxis","labels","cssClass","yaxis","minWidth","maxWidth","rotate","showPriceChart","priceChart","output","priceSymbol","Chart","options","PriceChart","priceChartLoaded","showForm","web3","etherBalance","tokenBalance","exchangeEtherBalance","exchangeTokenBalance","etherDepositAmount","token","tokenDepositAmount","etherWithdrawAmount","tokenWithdrawAmount","onSubmit","event","preventDefault","depositEther","value","utils","toWei","placeholder","onChange","required","async","approve","address","depositToken","setTimeout","withdrawEther","withdrawToken","Balance","componentWillMount","loadBlockchainData","loadBalances","balancesLoading","buyOrder","sellOrder","showBuyTotal","showSellTotal","makeBuyOrder","toString","makeOrder","makeSellOrder","Orders","making","Content","loadAllOrders","subscribeToEvents","App","Web3Real","require","mockWeb3","eth","net","getId","Promise","resolve","getAccounts","Contract","getBalance","loadWeb3","loadAccount","networkId","mockToken","balanceOf","call","symbol","name","loadToken","mockExchange","feePercent","getPastEvents","loadExchange","contractsLoaded","rootReducer","combineReducers","arguments","action","index","findIndex","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Boolean","location","hostname","match","preloadedState","ReactDOM","Provider","store","createStore","applyMiddleware","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3cc2e3dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lesko.320f8c82.png\";","export const ETHER_ADDRESS = '0x0000000000000000000000000000000000000000'\nexport const GREEN = 'success'\nexport const RED = 'danger'\n\nexport const DECIMALS = (10**18)\n\n// Shortcut to avoid passing around web3 connection\nexport const ether = (wei) => {\n  if(wei) {\n    return(wei / DECIMALS) // 18 decimal places\n  }\n}\n\n// Tokens and ether have same decimal resolution\nexport const tokens = ether\n","import { get, groupBy, reject, maxBy, minBy } from 'lodash'\nimport { createSelector } from 'reselect'\nimport moment from 'moment'\nimport { ETHER_ADDRESS, GREEN, RED, ether, tokens } from '../helpers'\n\n// TODO: Move me to helpers file\nexport const formatBalance = (balance) => {\n  const precision = 100 // 2 decimal places\n\n  balance = ether(balance)\n  balance = Math.round(balance * precision) / precision // Use 2 decimal places\n\n  return balance\n}\n\nconst account = state => get(state, 'web3.account')\nexport const accountSelector = createSelector(account, a => a)\n\nconst web3 = state => get(state, 'web3.connection')\nexport const web3Selector = createSelector(web3, w => w)\n\nconst tokenLoaded = state => get(state, 'token.loaded', false)\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tl => tl)\n\nconst token = state => get(state, 'token.contract')\nexport const tokenSelector = createSelector(token, t => t)\n\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false)\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el)\n\nconst exchange = state => get(state, 'exchange.contract')\nexport const exchangeSelector = createSelector(exchange, e => e)\n\nexport const contractsLoadedSelector = createSelector(\n  tokenLoaded,\n  exchangeLoaded,\n  (tl, el) => (tl && el)\n)\n\n// All Orders\nconst allOrdersLoaded = state => get(state, 'exchange.allOrders.loaded', false)\nconst allOrders = state => get(state, 'exchange.allOrders.data', [])\n\n// Cancelled orders\nconst cancelledOrdersLoaded = state => get(state, 'exchange.cancelledOrders.loaded', false)\nexport const cancelledOrdersLoadedSelector = createSelector(cancelledOrdersLoaded, loaded => loaded)\n\nconst cancelledOrders = state => get(state, 'exchange.cancelledOrders.data', [])\nexport const cancelledOrdersSelector = createSelector(cancelledOrders, o => o)\n\n// Filled Orders\nconst filledOrdersLoaded = state => get(state, 'exchange.filledOrders.loaded', false)\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nconst filledOrders = state => get(state, 'exchange.filledOrders.data', [])\nexport const filledOrdersSelector = createSelector(\n  filledOrders,\n  (orders) => {\n    // Sort orders by date ascending for price comparison\n    orders = orders.sort((a,b) => a.timestamp - b.timestamp)\n    // Decorate the orders\n    orders = decorateFilledOrders(orders)\n    // Sort orders by date descending for display\n    orders = orders.sort((a,b) => b.timestamp - a.timestamp)\n    return orders\n  }\n)\n\nconst decorateFilledOrders = (orders) => {\n  // Track previous order to compare history\n  let previousOrder = orders[0]\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order)\n      order = decorateFilledOrder(order, previousOrder)\n      previousOrder = order // Update the previous order once it's decorated\n      return order\n    })\n  )\n}\n\nconst decorateOrder = (order) => {\n  let etherAmount\n  let tokenAmount\n\n  if(order.tokenGive === ETHER_ADDRESS) {\n    etherAmount = order.amountGive\n    tokenAmount = order.amountGet\n  } else {\n    etherAmount = order.amountGet\n    tokenAmount = order.amountGive\n  }\n\n  // Calculate token price to 5 decimal places\n  const precision = 100000\n  let tokenPrice = (etherAmount / tokenAmount)\n  tokenPrice = Math.round(tokenPrice * precision) / precision\n\n  return({\n    ...order,\n    etherAmount: ether(etherAmount),\n    tokenAmount: tokens(tokenAmount),\n    tokenPrice,\n    formattedTimestamp: moment.unix(order.timestamp).format('h:mm:ss a M/D')\n  })\n}\n\nconst decorateFilledOrder = (order, previousOrder) => {\n  return({\n    ...order,\n    tokenPriceClass: tokenPriceClass(order.tokenPrice, order.id, previousOrder)\n  })\n}\n\nconst tokenPriceClass = (tokenPrice, orderId, previousOrder) => {\n  // Show green price if only one order exists\n  if(previousOrder.id === orderId) {\n    return GREEN\n  }\n\n  // Show green price if order price higher than previous order\n  // Show red price if order price lower than previous order\n  if(previousOrder.tokenPrice <= tokenPrice) {\n    return GREEN // success\n  } else {\n    return RED // danger\n  }\n}\n\nconst openOrders = state => {\n  const all = allOrders(state)\n  const filled = filledOrders(state)\n  const cancelled = cancelledOrders(state)\n\n  console.log('🔍 openOrders selector:');\n  console.log('  - All orders:', all.length, 'IDs:', all.map(o => o.id));\n  console.log('  - Filled orders:', filled.length, 'IDs:', filled.slice(0, 10).map(o => o.id), '...');\n  console.log('  - Cancelled orders:', cancelled.length, 'IDs:', cancelled.map(o => o.id));\n\n  const openOrders = reject(all, (order) => {\n    const orderFilled = filled.some((o) => o.id === order.id)\n    const orderCancelled = cancelled.some((o) => o.id === order.id)\n    if (orderFilled || orderCancelled) {\n      console.log('  ⚠️  Filtering out order ID:', order.id, 'filled:', orderFilled, 'cancelled:', orderCancelled);\n    }\n    return(orderFilled || orderCancelled)\n  })\n\n  console.log('  - Open orders after filter:', openOrders.length);\n  console.log('  - Open order IDs:', openOrders.map(o => o.id));\n\n  return openOrders\n}\n\n\nconst orderBookLoaded = state => cancelledOrdersLoaded(state) && filledOrdersLoaded(state) && allOrdersLoaded(state)\nexport const orderBookLoadedSelector = createSelector(orderBookLoaded, loaded => loaded)\n\n// Create the order book\nexport const orderBookSelector = createSelector(\n  openOrders,\n  (orders) => {\n    // Decorate orders\n    orders = decorateOrderBookOrders(orders)\n    // Group orders by \"orderType\"\n    orders = groupBy(orders, 'orderType')\n    // Fetch buy orders\n    const buyOrders = get(orders, 'buy', [])\n    // Sort buy orders by token price\n    orders = {\n      ...orders,\n      buyOrders: buyOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\n    }\n    // Fetch sell orders\n    const sellOrders = get(orders, 'sell', [])\n    // Sort sell orders by token price\n    orders = {\n      ...orders,\n      sellOrders: sellOrders.sort((a,b) => b.tokenPrice - a.tokenPrice)\n    }\n    return orders\n  }\n)\n\nconst decorateOrderBookOrders = (orders) => {\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order)\n      order = decorateOrderBookOrder(order)\n      return(order)\n    })\n  )\n}\n\nconst decorateOrderBookOrder = (order) => {\n  const orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n  return({\n    ...order,\n    orderType,\n    orderTypeClass: (orderType === 'buy' ? GREEN : RED),\n    orderFillAction: orderType === 'buy' ? 'sell' : 'buy'\n  })\n}\n\nexport const myFilledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nexport const myFilledOrdersSelector = createSelector(\n  account,\n  filledOrders,\n  (account, orders) => {\n    // Find our orders\n    orders = orders.filter((o) => o.user === account || o.userFill === account)\n    // Sort by date ascending\n    orders = orders.sort((a,b) => a.timestamp - b.timestamp)\n    // Decorate orders - add display attributes\n    orders = decorateMyFilledOrders(orders, account)\n    return orders\n  }\n)\n\nconst decorateMyFilledOrders = (orders, account) => {\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order)\n      order = decorateMyFilledOrder(order, account)\n      return(order)\n    })\n  )\n}\n\nconst decorateMyFilledOrder = (order, account) => {\n  const myOrder = order.user === account\n\n  let orderType\n  if(myOrder) {\n    orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n  } else {\n    orderType = order.tokenGive === ETHER_ADDRESS ? 'sell' : 'buy'\n  }\n\n  return({\n    ...order,\n    orderType,\n    orderTypeClass: (orderType === 'buy' ? GREEN : RED),\n    orderSign: (orderType === 'buy' ? '+' : '-')\n  })\n}\n\nexport const myOpenOrdersLoadedSelector = createSelector(orderBookLoaded, loaded => loaded)\n\nexport const myOpenOrdersSelector = createSelector(\n  account,\n  openOrders,\n  (account, orders) => {\n    // Filter orders created by current account\n    orders = orders.filter((o) => o.user === account)\n    // Decorate orders - add display attributes\n    orders = decorateMyOpenOrders(orders)\n    // Sort orders by date descending\n    orders = orders.sort((a,b) => b.timestamp - a.timestamp)\n    return orders\n  }\n)\n\nconst decorateMyOpenOrders = (orders, account) => {\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order)\n      order = decorateMyOpenOrder(order, account)\n      return(order)\n    })\n  )\n}\n\nconst decorateMyOpenOrder = (order, account) => {\n  let orderType = order.tokenGive === ETHER_ADDRESS ? 'buy' : 'sell'\n\n  return({\n    ...order,\n    orderType,\n    orderTypeClass: (orderType === 'buy' ? GREEN : RED)\n  })\n}\n\nexport const priceChartLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nexport const priceChartSelector = createSelector(\n  filledOrders,\n  (orders) => {\n    // Sort orders by date ascending to compare history\n    orders = orders.sort((a,b) => a.timestamp - b.timestamp)\n    // Decorate orders - add display attributes\n    orders = orders.map((o) => decorateOrder(o))\n    // Get last 2 order for final price & price change\n    let secondLastOrder, lastOrder\n    [secondLastOrder, lastOrder] = orders.slice(orders.length - 2, orders.length)\n    // get last order price\n    const lastPrice = get(lastOrder, 'tokenPrice', 0)\n    // get second last order price\n    const secondLastPrice = get(secondLastOrder, 'tokenPrice', 0)\n\n    return({\n      lastPrice,\n      lastPriceChange: (lastPrice >= secondLastPrice ? '+' : '-'),\n      series: [{\n        data: buildGraphData(orders)\n      }]\n    })\n  }\n)\n\nconst buildGraphData = (orders) => {\n  // Group the orders by hour for the graph\n  orders = groupBy(orders, (o) => moment.unix(o.timestamp).startOf('hour').format())\n  // Get each hour where data exists\n  const hours = Object.keys(orders)\n  // Build the graph series\n  const graphData = hours.map((hour) => {\n    // Fetch all the orders from current hour\n    const group = orders[hour]\n    // Calculate price values - open, high, low, close\n    const open = group[0] // first order\n    const high = maxBy(group, 'tokenPrice') // high price\n    const low = minBy(group, 'tokenPrice') // low price\n    const close = group[group.length - 1] // last order\n\n    return({\n      x: new Date(hour),\n      y: [open.tokenPrice, high.tokenPrice, low.tokenPrice, close.tokenPrice]\n    })\n  })\n\n  return graphData\n}\n\nconst orderCancelling = state => get(state, 'exchange.orderCancelling', false)\nexport const orderCancellingSelector = createSelector(orderCancelling, status => status)\n\nconst orderFilling = state => get(state, 'exchange.orderFilling', false)\nexport const orderFillingSelector = createSelector(orderFilling, status => status)\n\n// BALANCES\nconst balancesLoading = state => get(state, 'exchange.balancesLoading', true)\nexport const balancesLoadingSelector = createSelector(balancesLoading, status => status)\n\nconst etherBalance = state => get(state, 'web3.balance', 0)\nexport const etherBalanceSelector = createSelector(\n  etherBalance,\n  (balance) => {\n    return formatBalance(balance)\n  }\n)\n\nconst tokenBalance = state => get(state, 'token.balance', 0)\nexport const tokenBalanceSelector = createSelector(\n  tokenBalance,\n  (balance) => {\n    return formatBalance(balance)\n  }\n)\n\nconst exchangeEtherBalance = state => get(state, 'exchange.etherBalance', 0)\nexport const exchangeEtherBalanceSelector = createSelector(\n  exchangeEtherBalance,\n  (balance) => {\n    return formatBalance(balance)\n  }\n)\n\nconst exchangeTokenBalance = state => get(state, 'exchange.tokenBalance', 0)\nexport const exchangeTokenBalanceSelector = createSelector(\n  exchangeTokenBalance,\n  (balance) => {\n    return formatBalance(balance)\n  }\n)\n\nconst etherDepositAmount = state => get(state, 'exchange.etherDepositAmount', null)\nexport const etherDepositAmountSelector = createSelector(etherDepositAmount, amount => amount)\n\nconst etherWithdrawAmount = state => get(state, 'exchange.etherWithdrawAmount', null)\nexport const etherWithdrawAmountSelector = createSelector(etherWithdrawAmount, amount => amount)\n\nconst tokenDepositAmount = state => get(state, 'exchange.tokenDepositAmount', null)\nexport const tokenDepositAmountSelector = createSelector(tokenDepositAmount, amount => amount)\n\nconst tokenWithdrawAmount = state => get(state, 'exchange.tokenWithdrawAmount', null)\nexport const tokenWithdrawAmountSelector = createSelector(tokenWithdrawAmount, amount => amount)\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {})\nexport const buyOrderSelector = createSelector(buyOrder, order => order)\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {})\nexport const sellOrderSelector = createSelector(sellOrder, order => order)\n\n","// Configuration for network addresses\n\n// 🎭 DEMO MODE - Set to true for static deployment (IPFS/Fleek)\nexport const DEMO_MODE = true;\n\nexport const NETWORKS = {\n  1: \"Ethereum Mainnet\",\n  5: \"Goerli Testnet\",\n  11155111: \"Sepolia Testnet\",\n  1337: \"Local Development\",\n  999: \"Demo Network\" // Virtual network for demo mode\n}\n\nexport const CONTRACT_ADDRESSES = {\n  // These are example addresses - replace with your actual deployed contract addresses\n  5: { // Goerli Testnet\n    Token: \"0x0000000000000000000000000000000000000000\", // Replace with your token contract address if deployed to Goerli\n    Exchange: \"0x0000000000000000000000000000000000000000\" // Replace with your exchange contract address if deployed to Goerli\n  },\n  11155111: { // Sepolia Testnet\n    Token: \"0x0000000000000000000000000000000000000000\", // Replace with your token contract address if deployed to Sepolia\n    Exchange: \"0x0000000000000000000000000000000000000000\" // Replace with your exchange contract address if deployed to Sepolia\n  },\n  999: { // Demo Network\n    Token: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    Exchange: \"0x8f0483125FCb9aaAEFA9209D8E9d7b9C8B9Fb90F\"\n  }\n}\n\n// For local development, we'll use the addresses from the contract ABIs ","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { accountSelector } from '../store/selectors'\nimport logo from '../images/lesko.png' \nimport { DEMO_MODE } from '../config'\n\n\n\nclass Navbar extends Component{\n  render(){\n    return(\n      <>\n        <nav className=\"navbar navbar-expand-lg navbar-dark\" style={{ position: 'relative' }}>\n            <a className=\"navbar-brand\" href=\"#/\"><img src={logo} width=\"127\" height=\"32\" alt=\"\"></img>\n            </a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            {/* Demo Mode Badge - Compact */}\n            {DEMO_MODE && (\n              <div style={{\n                background: 'linear-gradient(90deg, #667eea 0%, #764ba2 100%)',\n                color: 'white',\n                padding: '4px 16px',\n                borderRadius: '20px',\n                fontSize: '12px',\n                fontWeight: '600',\n                marginRight: '15px',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '8px',\n                boxShadow: '0 2px 6px rgba(102, 126, 234, 0.4)',\n                whiteSpace: 'nowrap'\n              }}>\n                <span role=\"img\" aria-label=\"Demo Mode\" style={{ fontSize: '14px' }}>🎭</span>\n                <span>DEMO MODE</span>\n              </div>\n            )}\n            \n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <a\n                   className=\"nav-link small\" \n                   href={`https://etherscan.io/address/${this.props.account}`}\n                   target=\"_blank\"\n                   rel=\"noopener noreferrer\"\n                   >\n                   {this.props.account}\n                   </a>\n                </li>\n              </ul>\n             </nav>\n      </>\n          )\n  }\n}\n\nfunction mapStateToProps(state){\n  return{\n    account: accountSelector(state)\n  }\n}\nexport default connect(mapStateToProps)(Navbar);\n\n","// WEB3\nexport function web3Loaded(connection) {\n  return {\n    type: 'WEB3_LOADED',\n    connection\n  }\n}\n\nexport function web3AccountLoaded(account) {\n  return {\n    type: 'WEB3_ACCOUNT_LOADED',\n    account\n  }\n}\n\n// TOKEN\nexport function tokenLoaded(contract) {\n  return {\n    type: 'TOKEN_LOADED',\n    contract\n  }\n}\n\n// EXCHANGE\nexport function exchangeLoaded(contract) {\n  return {\n    type: 'EXCHANGE_LOADED',\n    contract\n  }\n}\n\nexport function cancelledOrdersLoaded(cancelledOrders) {\n  return {\n    type: 'CANCELLED_ORDERS_LOADED',\n    cancelledOrders\n  }\n}\n\nexport function filledOrdersLoaded(filledOrders) {\n  return {\n    type: 'FILLED_ORDERS_LOADED',\n    filledOrders\n  }\n}\n\nexport function allOrdersLoaded(allOrders) {\n  return {\n    type: 'ALL_ORDERS_LOADED',\n    allOrders\n  }\n}\n\n// Cancel Order\nexport function orderCancelling() {\n  return {\n    type: 'ORDER_CANCELLING'\n  }\n}\n\nexport function orderCancelled(order) {\n  return {\n    type: 'ORDER_CANCELLED',\n    order\n  }\n}\n\n// Fill Order\nexport function orderFilling() {\n  return {\n    type: 'ORDER_FILLING'\n  }\n}\n\nexport function orderFilled(order) {\n  return {\n    type: 'ORDER_FILLED',\n    order\n  }\n}\n\n// Balances\nexport function etherBalanceLoaded(balance) {\n  return {\n    type: 'ETHER_BALANCE_LOADED',\n    balance\n  }\n}\n\nexport function tokenBalanceLoaded(balance) {\n  return {\n    type: 'TOKEN_BALANCE_LOADED',\n    balance\n  }\n}\n\nexport function exchangeEtherBalanceLoaded(balance) {\n  return {\n    type: 'EXCHANGE_ETHER_BALANCE_LOADED',\n    balance\n  }\n}\n\nexport function exchangeTokenBalanceLoaded(balance) {\n  return {\n    type: 'EXCHANGE_TOKEN_BALANCE_LOADED',\n    balance\n  }\n}\n\nexport function balancesLoaded() {\n  return {\n    type: 'BALANCES_LOADED'\n  }\n}\n\nexport function balancesLoading() {\n  return {\n    type: 'BALANCES_LOADING'\n  }\n}\n\nexport function etherDepositAmountChanged(amount) {\n  return {\n    type: 'ETHER_DEPOSIT_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function etherWithdrawAmountChanged(amount) {\n  return {\n    type: 'ETHER_WITHDRAW_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function tokenDepositAmountChanged(amount) {\n  return {\n    type: 'TOKEN_DEPOSIT_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function tokenWithdrawAmountChanged(amount) {\n  return {\n    type: 'TOKEN_WITHDRAW_AMOUNT_CHANGED',\n    amount\n  }\n}\n\n// Buy Order\nexport function buyOrderAmountChanged(amount) {\n  return {\n    type: 'BUY_ORDER_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function buyOrderPriceChanged(price) {\n  return {\n    type: 'BUY_ORDER_PRICE_CHANGED',\n    price\n  }\n}\n\nexport function buyOrderMaking(price) {\n  return {\n    type: 'BUY_ORDER_MAKING'\n  }\n}\n\n// Generic Order\nexport function orderMade(order) {\n  return {\n    type: 'ORDER_MADE',\n    order\n  }\n}\n\n// Sell Order\nexport function sellOrderAmountChanged(amount) {\n  return {\n    type: 'SELL_ORDER_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function sellOrderPriceChanged(price) {\n  return {\n    type: 'SELL_ORDER_PRICE_CHANGED',\n    price\n  }\n}\n\nexport function sellOrderMaking(price) {\n  return {\n    type: 'SELL_ORDER_MAKING'\n  }\n}\n\n","// Mock data for Demo Mode - LeskoDEX\n// This provides realistic data for demonstration without blockchain connection\n\nexport const DEMO_MODE = true;\n\n// Mock account\nexport const MOCK_ACCOUNT = \"0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb\";\n\n// Mock balances\nexport const MOCK_BALANCES = {\n  etherBalance: \"5.234\",\n  tokenBalance: \"1250.50\",\n  exchangeEtherBalance: \"2.150\",\n  exchangeTokenBalance: \"875.25\"\n};\n\n// Mock cancelled orders\nexport const MOCK_CANCELLED_ORDERS = [\n  {\n    id: \"1\",\n    user: \"0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb\",\n    tokenGet: \"0x0000000000000000000000000000000000000000\",\n    amountGet: \"1000000000000000000\",\n    tokenGive: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGive: \"100000000000000000000\",\n    timestamp: \"1609459200\"\n  }\n];\n\n// Mock filled orders (trades) - 40 candlesticks over 24 hours (30-min intervals)\n// Using proper Wei format (10^18) and recent timestamps\n// User 0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb appears only 5 times (for \"My Transactions\")\nconst now = Math.floor(Date.now() / 1000);\nconst HOUR = 3600;\nconst MINUTE = 60;\n\n// Generate 120 trades (3 trades per 30-min candle = 40 candles)\nconst generateTrades = () => {\n  const trades = [];\n  let id = 1;\n  let basePrice = 98; // Starting price\n  \n  // Other users for trading\n  const otherUsers = [\n    \"0x2C7859F7F477801A0b1CCb3f5Bc3F0bEe3F8E8a\",\n    \"0x3D8A9F4C3bEe2F9a5c8A7b6D5e4F3c2B1a0D9E8\",\n    \"0x4E9B8D7C6A5F4E3D2C1B0A9F8E7D6C5B4A3E2D1\",\n    \"0x5F0C1E2D3A4B5C6D7E8F9A0B1C2D3E4F5A6B7C8\",\n    \"0x6A1B2C3D4E5F6A7B8C9D0E1F2A3B4C5D6E7F8A9\",\n    \"0x7B2C3D4E5F6A7B8C9D0E1F2A3B4C5D6E7F8A9B0\",\n    \"0x8C3D4E5F6A7B8C9D0E1F2A3B4C5D6E7F8A9B0C1\",\n    \"0x9D4E5F6A7B8C9D0E1F2A3B4C5D6E7F8A9B0C1D2\"\n  ];\n  \n  const myUser = \"0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb\";\n  let myTradeCount = 0;\n  const maxMyTrades = 5; // Only 5 trades for \"My Transactions\"\n  \n  // 40 candles, 3 trades each\n  for (let candle = 0; candle < 40; candle++) {\n    const candleStart = now - (40 - candle) * 30 * MINUTE;\n    \n    // Price variation for this candle\n    const priceChange = (Math.random() - 0.5) * 10; // -5 to +5\n    const open = basePrice;\n    const close = basePrice + priceChange;\n    const high = Math.max(open, close) + Math.random() * 3;\n    const low = Math.min(open, close) - Math.random() * 3;\n    \n    basePrice = close; // Next candle starts where this one closes\n    \n    // 3 trades per candle (open, high/low, close)\n    const prices = [open, Math.random() > 0.5 ? high : low, close];\n    \n    for (let i = 0; i < 3; i++) {\n      const price = prices[i];\n      const timeOffset = i * 8 * MINUTE; // Spread trades across 24 minutes\n      \n      // Decide if this trade involves myUser\n      const useMyUser = myTradeCount < maxMyTrades && Math.random() > 0.7;\n      const user = useMyUser ? myUser : otherUsers[Math.floor(Math.random() * otherUsers.length)];\n      const userFill = otherUsers[Math.floor(Math.random() * otherUsers.length)];\n      \n      if (useMyUser) myTradeCount++;\n      \n      trades.push({\n        id: String(id++),\n        user,\n        userFill,\n        tokenGet: \"0x0000000000000000000000000000000000000000\", // ETH\n        amountGet: \"1000000000000000000\", // 1 ETH\n        tokenGive: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\", // ESKO\n        amountGive: String(Math.floor(price * 1e18)), // Price * 10^18\n        timestamp: String(candleStart + timeOffset)\n      });\n    }\n  }\n  \n  return trades;\n};\n\nexport const MOCK_FILLED_ORDERS = generateTrades();\n\n// Mock open orders (orderbook) - using dynamic timestamps\n// IDs: 201-220 (to avoid collision with filled orders 1-120)\n// 10 BUY orders + 10 SELL orders = 20 total\nexport const MOCK_ALL_ORDERS = [\n  // Buy orders (buying ETH with ESKO) - sorted by price descending\n  {\n    id: \"201\",\n    user: \"0x2C7859F7F477801A0b1CCb3f5Bc3F0bEe3F8E8a\",\n    tokenGet: \"0x0000000000000000000000000000000000000000\", // ETH\n    amountGet: \"1500000000000000000\", // 1.5 ETH\n    tokenGive: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\", // ESKO\n    amountGive: \"142500000000000000000\", // 142.5 ESKO (rate: 95 ESKO/ETH)\n    timestamp: String(now - 2 * HOUR)\n  },\n  {\n    id: \"202\",\n    user: \"0x3D8A9F4C3bEe2F9a5c8A7b6D5e4F3c2B1a0D9E8\",\n    tokenGet: \"0x0000000000000000000000000000000000000000\",\n    amountGet: \"2000000000000000000\", // 2 ETH\n    tokenGive: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGive: \"188000000000000000000\", // 188 ESKO (rate: 94 ESKO/ETH)\n    timestamp: String(now - 1 * HOUR - 50 * MINUTE)\n  },\n  {\n    id: \"203\",\n    user: \"0x4E9B8D7C6A5F4E3D2C1B0A9F8E7D6C5B4A3E2D1\",\n    tokenGet: \"0x0000000000000000000000000000000000000000\",\n    amountGet: \"1000000000000000000\", // 1 ETH\n    tokenGive: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGive: \"93000000000000000000\", // 93 ESKO (rate: 93 ESKO/ETH)\n    timestamp: String(now - 1 * HOUR - 30 * MINUTE)\n  },\n  {\n    id: \"204\",\n    user: \"0x5F0C1E2D3A4B5C6D7E8F9A0B1C2D3E4F5A6B7C8\",\n    tokenGet: \"0x0000000000000000000000000000000000000000\",\n    amountGet: \"3000000000000000000\", // 3 ETH\n    tokenGive: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGive: \"276000000000000000000\", // 276 ESKO (rate: 92 ESKO/ETH)\n    timestamp: String(now - 1 * HOUR)\n  },\n  {\n    id: \"205\",\n    user: \"0x6A1B2C3D4E5F6A7B8C9D0E1F2A3B4C5D6E7F8A9\",\n    tokenGet: \"0x0000000000000000000000000000000000000000\",\n    amountGet: \"2500000000000000000\", // 2.5 ETH\n    tokenGive: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGive: \"227500000000000000000\", // 227.5 ESKO (rate: 91 ESKO/ETH)\n    timestamp: String(now - 55 * MINUTE)\n  },\n  {\n    id: \"206\",\n    user: \"0x7B2C3D4E5F6A7B8C9D0E1F2A3B4C5D6E7F8A9B0\",\n    tokenGet: \"0x0000000000000000000000000000000000000000\",\n    amountGet: \"1800000000000000000\", // 1.8 ETH\n    tokenGive: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGive: \"162000000000000000000\", // 162 ESKO (rate: 90 ESKO/ETH)\n    timestamp: String(now - 45 * MINUTE)\n  },\n  {\n    id: \"207\",\n    user: \"0x8C3D4E5F6A7B8C9D0E1F2A3B4C5D6E7F8A9B0C1\",\n    tokenGet: \"0x0000000000000000000000000000000000000000\",\n    amountGet: \"1200000000000000000\", // 1.2 ETH\n    tokenGive: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGive: \"106800000000000000000\", // 106.8 ESKO (rate: 89 ESKO/ETH)\n    timestamp: String(now - 40 * MINUTE)\n  },\n  {\n    id: \"208\",\n    user: \"0x9D4E5F6A7B8C9D0E1F2A3B4C5D6E7F8A9B0C1D2\",\n    tokenGet: \"0x0000000000000000000000000000000000000000\",\n    amountGet: \"4000000000000000000\", // 4 ETH\n    tokenGive: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGive: \"352000000000000000000\", // 352 ESKO (rate: 88 ESKO/ETH)\n    timestamp: String(now - 35 * MINUTE)\n  },\n  {\n    id: \"209\",\n    user: \"0xA1E2B3C4D5E6F7A8B9C0D1E2F3A4B5C6D7E8F9A0\",\n    tokenGet: \"0x0000000000000000000000000000000000000000\",\n    amountGet: \"800000000000000000\", // 0.8 ETH\n    tokenGive: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGive: \"69600000000000000000\", // 69.6 ESKO (rate: 87 ESKO/ETH)\n    timestamp: String(now - 25 * MINUTE)\n  },\n  {\n    id: \"210\",\n    user: \"0xB2F3A4B5C6D7E8F9A0B1C2D3E4F5A6B7C8D9E0F1\",\n    tokenGet: \"0x0000000000000000000000000000000000000000\",\n    amountGet: \"5000000000000000000\", // 5 ETH\n    tokenGive: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGive: \"430000000000000000000\", // 430 ESKO (rate: 86 ESKO/ETH)\n    timestamp: String(now - 15 * MINUTE)\n  },\n  \n  // Sell orders (selling ETH for ESKO) - sorted by price ascending\n  {\n    id: \"211\",\n    user: \"0xC3A4B5C6D7E8F9A0B1C2D3E4F5A6B7C8D9E0F1A2\",\n    tokenGet: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\", // ESKO\n    amountGet: \"155000000000000000000\", // 155 ESKO (rate: 103.33 ESKO/ETH)\n    tokenGive: \"0x0000000000000000000000000000000000000000\", // ETH\n    amountGive: \"1500000000000000000\", // 1.5 ETH\n    timestamp: String(now - 50 * MINUTE)\n  },\n  {\n    id: \"212\",\n    user: \"0xD4B5C6D7E8F9A0B1C2D3E4F5A6B7C8D9E0F1A2B3\",\n    tokenGet: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGet: \"208000000000000000000\", // 208 ESKO (rate: 104 ESKO/ETH)\n    tokenGive: \"0x0000000000000000000000000000000000000000\",\n    amountGive: \"2000000000000000000\", // 2 ETH\n    timestamp: String(now - 48 * MINUTE)\n  },\n  {\n    id: \"213\",\n    user: \"0xE5C6D7E8F9A0B1C2D3E4F5A6B7C8D9E0F1A2B3C4\",\n    tokenGet: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGet: \"105000000000000000000\", // 105 ESKO (rate: 105 ESKO/ETH)\n    tokenGive: \"0x0000000000000000000000000000000000000000\",\n    amountGive: \"1000000000000000000\", // 1 ETH\n    timestamp: String(now - 42 * MINUTE)\n  },\n  {\n    id: \"214\",\n    user: \"0xF6D7E8F9A0B1C2D3E4F5A6B7C8D9E0F1A2B3C4D5\",\n    tokenGet: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGet: \"318000000000000000000\", // 318 ESKO (rate: 106 ESKO/ETH)\n    tokenGive: \"0x0000000000000000000000000000000000000000\",\n    amountGive: \"3000000000000000000\", // 3 ETH\n    timestamp: String(now - 38 * MINUTE)\n  },\n  {\n    id: \"215\",\n    user: \"0xA7E8F9A0B1C2D3E4F5A6B7C8D9E0F1A2B3C4D5E6\",\n    tokenGet: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGet: \"267500000000000000000\", // 267.5 ESKO (rate: 107 ESKO/ETH)\n    tokenGive: \"0x0000000000000000000000000000000000000000\",\n    amountGive: \"2500000000000000000\", // 2.5 ETH\n    timestamp: String(now - 32 * MINUTE)\n  },\n  {\n    id: \"216\",\n    user: \"0xB8F9A0B1C2D3E4F5A6B7C8D9E0F1A2B3C4D5E6F7\",\n    tokenGet: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGet: \"194400000000000000000\", // 194.4 ESKO (rate: 108 ESKO/ETH)\n    tokenGive: \"0x0000000000000000000000000000000000000000\",\n    amountGive: \"1800000000000000000\", // 1.8 ETH\n    timestamp: String(now - 28 * MINUTE)\n  },\n  {\n    id: \"217\",\n    user: \"0xC9A0B1C2D3E4F5A6B7C8D9E0F1A2B3C4D5E6F7A8\",\n    tokenGet: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGet: \"130800000000000000000\", // 130.8 ESKO (rate: 109 ESKO/ETH)\n    tokenGive: \"0x0000000000000000000000000000000000000000\",\n    amountGive: \"1200000000000000000\", // 1.2 ETH\n    timestamp: String(now - 22 * MINUTE)\n  },\n  {\n    id: \"218\",\n    user: \"0xD0B1C2D3E4F5A6B7C8D9E0F1A2B3C4D5E6F7A8B9\",\n    tokenGet: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGet: \"440000000000000000000\", // 440 ESKO (rate: 110 ESKO/ETH)\n    tokenGive: \"0x0000000000000000000000000000000000000000\",\n    amountGive: \"4000000000000000000\", // 4 ETH\n    timestamp: String(now - 18 * MINUTE)\n  },\n  {\n    id: \"219\",\n    user: \"0xE1C2D3E4F5A6B7C8D9E0F1A2B3C4D5E6F7A8B9C0\",\n    tokenGet: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGet: \"88800000000000000000\", // 88.8 ESKO (rate: 111 ESKO/ETH)\n    tokenGive: \"0x0000000000000000000000000000000000000000\",\n    amountGive: \"800000000000000000\", // 0.8 ETH\n    timestamp: String(now - 12 * MINUTE)\n  },\n  {\n    id: \"220\",\n    user: \"0xF2D3E4F5A6B7C8D9E0F1A2B3C4D5E6F7A8B9C0D1\",\n    tokenGet: \"0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa\",\n    amountGet: \"560000000000000000000\", // 560 ESKO (rate: 112 ESKO/ETH)\n    tokenGive: \"0x0000000000000000000000000000000000000000\",\n    amountGive: \"5000000000000000000\", // 5 ETH\n    timestamp: String(now - 8 * MINUTE)\n  }\n];\n","import React from 'react';\n\nexport default function ({ type }) {\n  if(type === 'table') {\n    return(<tbody className=\"spinner-border text-light text-center\"></tbody>)\n  } else {\n    return(<div className=\"spinner-border text-light text-center\"></div>)\n  }\n}\n\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport Spinner from './Spinner'\nimport {\n  orderBookSelector,\n  orderBookLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  orderFillingSelector\n} from '../store/selectors'\nimport { fillOrder } from '../store/interactions'\n\nconst renderOrder = (order, props)=>{\n  const { dispatch, exchange, account } = props\n  return(\n    <OverlayTrigger\n      key={ order.id }\n      placement='auto'\n      overlay={\n        <Tooltip id={ order.id }>\n         {'Click here to '+ order.orderFillAction}\n        </Tooltip>\n      }\n    >\n        <tr\n          key={order.id}\n          className=\"order-book-order\"\n          onClick={ (e) => fillOrder(dispatch, exchange, order, account) }\n        > \n          <td>{ order.tokenAmount }</td>\n          <td className={\"text-\"+order.orderTypeClass}>{ order.tokenPrice }</td>\n          <td>{ order.etherAmount }</td>\n        </tr>\n    </OverlayTrigger>\n    )\n}\n\nconst showOrderBook = (props)=>{\n  const { orderBook } = props\n  return(\n     <tbody>\n      { orderBook.sellOrders.map((order)=> renderOrder(order, props)) }\n      <tr>\n      <th>ESKO</th>\n      <th>ESKO/ETH</th>\n      <th>ETH</th>\n      </tr>\n      { orderBook.buyOrders.map((order)=> renderOrder(order, props)) }\n     </tbody>\n    )\n}\n\nclass OrderBook extends Component{\n  render(){\n    return(\n          <div className=\"vertical\">\n            <div className=\"card bg-dark text-white\">\n              <div className=\"card-header\">\n                Order Book\n              </div>\n              <div className=\"card-body\">\n                <table className=\"table table-dark table-sm small\">\n                 { this.props.showOrderBook ? showOrderBook(this.props) : <Spinner type='table' /> }\n                </table>\n              </div>\n            </div>\n          </div>      \n        )\n  }\n}\n\nfunction mapStateToProps(state){\n  const orderBookLoaded = orderBookLoadedSelector(state)\n  const orderFilling = orderFillingSelector(state)\n\n  return{\n    orderBook: orderBookSelector(state),\n    showOrderBook: orderBookLoaded && !orderFilling,\n    exchange: exchangeSelector(state),\n    account: accountSelector(state)\n  }\n}\nexport default connect(mapStateToProps)(OrderBook);\n","import Web3 from \"web3\";\nimport {\n  web3Loaded,\n  web3AccountLoaded,\n  tokenLoaded,\n  exchangeLoaded,\n  cancelledOrdersLoaded,\n  filledOrdersLoaded,\n  allOrdersLoaded,\n  orderCancelling,\n  orderCancelled,\n  orderFilling,\n  orderFilled,\n  etherBalanceLoaded,\n  tokenBalanceLoaded,\n  exchangeEtherBalanceLoaded,\n  exchangeTokenBalanceLoaded,\n  balancesLoaded,\n  balancesLoading,\n  buyOrderMaking,\n  sellOrderMaking,\n  orderMade,\n} from \"./actions\";\nimport Token from \"../abis/ESKO.json\";\nimport Exchange from \"../abis/LESKOdex.json\";\nimport { ETHER_ADDRESS } from \"../helpers\";\nimport { CONTRACT_ADDRESSES, DEMO_MODE } from \"../config\";\nimport {\n  MOCK_ACCOUNT,\n  MOCK_BALANCES,\n  MOCK_CANCELLED_ORDERS,\n  MOCK_FILLED_ORDERS,\n  MOCK_ALL_ORDERS\n} from \"./mockData\";\n\nexport const loadWeb3 = async (dispatch) => {\n  if (DEMO_MODE) {\n    // Mock Web3 for demo mode with utils\n    const Web3Real = require('web3');\n    const mockWeb3 = {\n      eth: {\n        net: { getId: () => Promise.resolve(999) },\n        getAccounts: () => Promise.resolve([MOCK_ACCOUNT]),\n        Contract: class MockContract {},\n        getBalance: () => Promise.resolve(\"5234000000000000000\")\n      },\n      utils: Web3Real.utils // Use real Web3 utils for conversion\n    };\n    dispatch(web3Loaded(mockWeb3));\n    return mockWeb3;\n  }\n  \n  if (typeof window.ethereum !== \"undefined\") {\n    const web3 = new Web3(window.ethereum);\n    dispatch(web3Loaded(web3));\n    return web3;\n  } else {\n    window.alert(\"Please install MetaMask\");\n    window.location.assign(\"https://metamask.io/\");\n  }\n};\n\nexport const loadAccount = async (web3, dispatch) => {\n  if (DEMO_MODE) {\n    dispatch(web3AccountLoaded(MOCK_ACCOUNT));\n    return MOCK_ACCOUNT;\n  }\n  \n  const accounts = await web3.eth.getAccounts();\n  const account = accounts[0];\n  dispatch(web3AccountLoaded(account));\n  return account;\n};\n\nexport const loadToken = async (web3, networkId, dispatch) => {\n  if (DEMO_MODE) {\n    // Mock token contract\n    const mockToken = {\n      options: { address: CONTRACT_ADDRESSES[999].Token },\n      methods: {\n        balanceOf: () => ({ call: () => Promise.resolve(MOCK_BALANCES.tokenBalance) }),\n        symbol: () => ({ call: () => Promise.resolve(\"ESKO\") }),\n        name: () => ({ call: () => Promise.resolve(\"ESKO Token\") })\n      }\n    };\n    dispatch(tokenLoaded(mockToken));\n    return mockToken;\n  }\n  \n  try {\n    let tokenAddress;\n    \n    // Check if we have a predefined address for this network\n    if (CONTRACT_ADDRESSES[networkId]) {\n      tokenAddress = CONTRACT_ADDRESSES[networkId].Token;\n    } else if (Token.networks && Token.networks[networkId]) {\n      // Fall back to ABI network address for local development\n      tokenAddress = Token.networks[networkId].address;\n    } else {\n      throw new Error(\"Token contract not deployed to detected network.\");\n    }\n    \n    const token = new web3.eth.Contract(\n      Token.abi,\n      tokenAddress\n    );\n    dispatch(tokenLoaded(token));\n    return token;\n  } catch (error) {\n    console.log(\n      \"Contract not deployed to the current network. Please select another network with Metamask.\",\n      error\n    );\n    window.alert(\"Token contract not deployed to detected network. Please connect to a supported network.\");\n    return null;\n  }\n};\n\nexport const loadExchange = async (web3, networkId, dispatch) => {\n  if (DEMO_MODE) {\n    // Mock exchange contract\n    const mockExchange = {\n      options: { address: CONTRACT_ADDRESSES[999].Exchange },\n      methods: {\n        feePercent: () => ({ call: () => Promise.resolve(\"10\") })\n      },\n      getPastEvents: () => Promise.resolve([])\n    };\n    dispatch(exchangeLoaded(mockExchange));\n    return mockExchange;\n  }\n  \n  try {\n    let exchangeAddress;\n    \n    // Check if we have a predefined address for this network\n    if (CONTRACT_ADDRESSES[networkId]) {\n      exchangeAddress = CONTRACT_ADDRESSES[networkId].Exchange;\n    } else if (Exchange.networks && Exchange.networks[networkId]) {\n      // Fall back to ABI network address for local development\n      exchangeAddress = Exchange.networks[networkId].address;\n    } else {\n      throw new Error(\"Exchange contract not deployed to detected network.\");\n    }\n    \n    const exchange = new web3.eth.Contract(\n      Exchange.abi,\n      exchangeAddress\n    );\n    dispatch(exchangeLoaded(exchange));\n    return exchange;\n  } catch (error) {\n    console.log(\n      \"Contract not deployed to the current network. Please select another network with Metamask.\",\n      error\n    );\n    window.alert(\"Exchange contract not deployed to detected network. Please connect to a supported network.\");\n    return null;\n  }\n};\n\nexport const loadAllOrders = async (exchange, dispatch) => {\n  if (DEMO_MODE) {\n    // Load mock data for demo\n    console.log('📊 DEMO MODE: Loading mock data...');\n    console.log('  - Cancelled Orders:', MOCK_CANCELLED_ORDERS.length);\n    console.log('  - Filled Orders:', MOCK_FILLED_ORDERS.length);\n    console.log('  - All Orders:', MOCK_ALL_ORDERS.length);\n    dispatch(cancelledOrdersLoaded(MOCK_CANCELLED_ORDERS));\n    dispatch(filledOrdersLoaded(MOCK_FILLED_ORDERS));\n    dispatch(allOrdersLoaded(MOCK_ALL_ORDERS));\n    console.log('✅ DEMO MODE: Mock data dispatched to Redux');\n    return;\n  }\n  \n  // Fetch cancelled orders with the \"Cancel\" event stream\n  const cancelStream = await exchange.getPastEvents(\"OrderCancelled\", {\n    fromBlock: 0,\n    toBlock: \"latest\",\n  });\n  // Format cancelled orders\n  const cancelledOrders = cancelStream.map((event) => event.returnValues);\n  // Add cancelled orders to the redux store\n  dispatch(cancelledOrdersLoaded(cancelledOrders));\n\n  // Fetch filled orders with the \"Trade\" event stream\n  const tradeStream = await exchange.getPastEvents(\"OrderFilled\", {\n    fromBlock: 0,\n    toBlock: \"latest\",\n  });\n  // Format filled orders\n  const filledOrders = tradeStream.map((event) => event.returnValues);\n  // Add cancelled orders to the redux store\n  dispatch(filledOrdersLoaded(filledOrders));\n\n  // Load order stream\n  const orderStream = await exchange.getPastEvents(\"OrderCreated\", {\n    fromBlock: 0,\n    toBlock: \"latest\",\n  });\n  // Format order stream\n  const allOrders = orderStream.map((event) => event.returnValues);\n  // Add open orders to the redux store\n  dispatch(allOrdersLoaded(allOrders));\n};\n\nexport const subscribeToEvents = async (exchange, dispatch) => {\n  if (DEMO_MODE) {\n    // No event subscription needed in demo mode\n    return;\n  }\n  \n  exchange.events.OrderCancelled({}, (error, event) => {\n    dispatch(orderCancelled(event.returnValues));\n  });\n\n  exchange.events.OrderFilled({}, (error, event) => {\n    dispatch(orderFilled(event.returnValues));\n  });\n\n  exchange.events.Deposit({}, (error, event) => {\n    dispatch(balancesLoaded());\n  });\n\n  exchange.events.Withdraw({}, (error, event) => {\n    dispatch(balancesLoaded());\n  });\n\n  exchange.events.OrderCreated({}, (error, event) => {\n    dispatch(orderMade(event.returnValues));\n  });\n};\n\nexport const cancelOrder = (dispatch, exchange, order, account) => {\n  exchange.methods\n    .cancelOrder(order.id)\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(orderCancelling());\n    })\n    .on(\"error\", (error) => {\n      console.log(error);\n      window.alert(\"There was an error!\");\n    });\n};\n\nexport const fillOrder = (dispatch, exchange, order, account) => {\n  exchange.methods\n    .fillOrder(order.id)\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(orderFilling());\n    })\n    .on(\"error\", (error) => {\n      console.log(error);\n      window.alert(\"There was an error!\");\n    });\n};\n\nexport const loadBalances = async (\n  dispatch,\n  web3,\n  exchange,\n  token,\n  account\n) => {\n  if (DEMO_MODE) {\n    // Load mock balances for demo\n    dispatch(etherBalanceLoaded(web3.utils ? web3.utils.toWei(MOCK_BALANCES.etherBalance, \"ether\") : \"5234000000000000000\"));\n    dispatch(tokenBalanceLoaded(web3.utils ? web3.utils.toWei(MOCK_BALANCES.tokenBalance, \"ether\") : \"1250500000000000000000\"));\n    dispatch(exchangeEtherBalanceLoaded(web3.utils ? web3.utils.toWei(MOCK_BALANCES.exchangeEtherBalance, \"ether\") : \"2150000000000000000\"));\n    dispatch(exchangeTokenBalanceLoaded(web3.utils ? web3.utils.toWei(MOCK_BALANCES.exchangeTokenBalance, \"ether\") : \"875250000000000000000\"));\n    dispatch(balancesLoaded());\n    return;\n  }\n  \n  if (typeof account !== \"undefined\") {\n    // Ether balance in wallet\n    const etherBalance = await web3.eth.getBalance(account);\n    dispatch(etherBalanceLoaded(etherBalance));\n\n    // Token balance in wallet\n    const tokenBalance = await token.methods.balanceOf(account).call();\n    dispatch(tokenBalanceLoaded(tokenBalance));\n\n    // Ether balance in exchange\n    const exchangeEtherBalance = await exchange.methods\n      .balanceOf(ETHER_ADDRESS, account)\n      .call();\n    dispatch(exchangeEtherBalanceLoaded(exchangeEtherBalance));\n\n    // Token balance in exchange\n    const exchangeTokenBalance = await exchange.methods\n      .balanceOf(token.options.address, account)\n      .call();\n    dispatch(exchangeTokenBalanceLoaded(exchangeTokenBalance));\n\n    // Trigger all balances loaded\n    dispatch(balancesLoaded());\n  } else {\n    window.alert(\"Please login with MetaMask\");\n  }\n};\n\nexport const depositEther = (dispatch, exchange, web3, amount, account) => {\n  exchange.methods\n    .depositEther()\n    .send({ from: account, value: web3.utils.toWei(amount, \"ether\") })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(balancesLoading());\n    })\n    .on(\"error\", (error) => {\n      console.error(error);\n      window.alert(`There was an error!`);\n    });\n};\n\nexport const withdrawEther = (dispatch, exchange, web3, amount, account) => {\n  exchange.methods\n    .withdrawEther(web3.utils.toWei(amount, \"ether\"))\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(balancesLoading());\n    })\n    .on(\"error\", (error) => {\n      console.error(error);\n      window.alert(`There was an error!`);\n    });\n};\n\n// export const depositToken = (dispatch, exchange, web3, token, amount, account) => {\n//   amount = web3.utils.toWei(amount, 'ether')\n\n//   token.methods.approve(exchange.options.address, amount).send({ from: account })\n//   .on('transactionHash', (hash) => {\n//     exchange.methods.depositToken(token.options.address, amount).send({ from: account })\n//     .on('transactionHash', (hash) => {\n//       dispatch(balancesLoading())\n//     })\n//     .on('error',(error) => {\n//       console.error(error)\n//       window.alert(`There was an error!`)\n//     })\n//   })\n// }\n\nexport const depositToken = async (\n  dispatch,\n  exchange,\n  web3,\n  token,\n  amount,\n  account\n) => {\n  amount = web3.utils.toWei(amount, \"ether\");\n\n  await token.methods\n    .approve(exchange.options.address, amount)\n    .send({ from: account });\n\n  await exchange.methods\n    .depositToken(token.options.address, amount)\n    .send({ from: account });\n\n  setTimeout(1000);\n\n  await dispatch(balancesLoading());\n};\n\nexport const withdrawToken = (\n  dispatch,\n  exchange,\n  web3,\n  token,\n  amount,\n  account\n) => {\n  exchange.methods\n    .withdrawToken(token.options.address, web3.utils.toWei(amount, \"ether\"))\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(balancesLoading());\n    })\n    .on(\"error\", (error) => {\n      console.error(error);\n      window.alert(`There was an error!`);\n    });\n};\n\nexport const makeBuyOrder = (\n  dispatch,\n  exchange,\n  token,\n  web3,\n  order,\n  account\n) => {\n  const tokenGet = token.options.address;\n  const amountGet = web3.utils.toWei(order.amount, \"ether\");\n  const tokenGive = ETHER_ADDRESS;\n  const amountGive = web3.utils.toWei(\n    (order.amount * order.price).toString(),\n    \"ether\"\n  );\n\n  exchange.methods\n    .makeOrder(tokenGet, amountGet, tokenGive, amountGive)\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(buyOrderMaking());\n    })\n    .on(\"error\", (error) => {\n      console.error(error);\n      window.alert(`There was an error!`);\n    });\n};\n\nexport const makeSellOrder = (\n  dispatch,\n  exchange,\n  token,\n  web3,\n  order,\n  account\n) => {\n  const tokenGet = ETHER_ADDRESS;\n  const amountGet = web3.utils.toWei(\n    (order.amount * order.price).toString(),\n    \"ether\"\n  );\n  const tokenGive = token.options.address;\n  const amountGive = web3.utils.toWei(order.amount, \"ether\");\n\n  exchange.methods\n    .makeOrder(tokenGet, amountGet, tokenGive, amountGive)\n    .send({ from: account })\n    .on(\"transactionHash\", (hash) => {\n      dispatch(sellOrderMaking());\n    })\n    .on(\"error\", (error) => {\n      console.error(error);\n      window.alert(`There was an error!`);\n    });\n};\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from './Spinner'\nimport {\n  filledOrdersLoadedSelector,\n  filledOrdersSelector\n} from '../store/selectors'\n\nconst showFilledOrders = (filledOrders)=>{\nreturn(\n      <tbody>\n        { filledOrders.map((order)=>{\n          return(\n            <tr className={ \"order-\" + order.id } key={ order.id }>\n              <td className=\"text-muted\">{ order.formattedTimestamp }</td>\n              <td>{ order.tokenAmount }</td>\n              <td className={ \"text-\" + order.tokenPriceClass }>{ order.tokenPrice }</td>\n            </tr>\n            )\n        }) }\n      </tbody>\n    ) \n}\n\n\nclass Trades extends Component{\n  render(){\n    return(\n     <div className=\"vertical\">\n         <div className=\"card bg-dark text-white\">\n              <div className=\"card-header\">\n               Trades\n              </div>\n              <div className=\"card-body\">\n                 <table className=\"table table-dark table-sm small\">\n                    <thead>\n                     <tr>\n                       <th>Time</th>\n                       <th>ESKO</th>\n                       <th>ESKO/ETH</th>\n                     </tr>\n                   </thead>\n                 { this.props.filledOrdersLoaded ? showFilledOrders(this.props.filledOrders): <Spinner type='table' /> }\n               </table>\n            </div>\n          </div>\n       </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return{\n    filledOrdersLoaded: filledOrdersLoadedSelector(state),\n    filledOrders: filledOrdersSelector(state),\n  }\n}\n\nexport default connect(mapStateToProps)(Trades)\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from './Spinner'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport {\n   myFilledOrdersLoadedSelector,\n   myFilledOrdersSelector,\n   myOpenOrdersLoadedSelector,\n   myOpenOrdersSelector,\n   exchangeSelector,\n   accountSelector,\n   orderCancellingSelector\n} from '../store/selectors'\nimport { cancelOrder } from '../store/interactions'\n\nconst showMyFilledOrders = (props)=>{\n  const { myFilledOrders } = props\n  return(\n    <tbody>\n      { myFilledOrders.map((order)=>{\n        return(\n        <tr key={order.id}>\n          <td className=\"text-muted\">{ order.formattedTimestamp }</td>\n          <td className={\"text-\"+order.orderTypeClass}>{ order.orderSign }{ order.tokenAmount }</td>\n          <td className={\"text-\"+order.orderTypeClass}>{ order.tokenPrice }</td>\n        </tr>\n        )\n      }) }\n     </tbody>\n  )\n}\n\nconst showMyOpenOrders = (props)=>{\n  const { myOpenOrders, dispatch, exchange, account } = props\n  return(\n    <tbody>\n      { myOpenOrders.map((order)=>{\n        return(\n        <tr key={order.id}>\n          <td className={\"text-\"+order.orderTypeClass}>{ order.tokenAmount }</td>\n          <td className={\"text-\"+order.orderTypeClass}>{ order.tokenPrice }</td>\n          <td \n          className=\"text-muted cancel-order\"\n          onClick={(e)=>{\n            cancelOrder(dispatch, exchange, order, account)          \n          }}\n          >X</td>\n        </tr>\n        )\n      }) }\n     </tbody>\n  )\n}\n\nclass MyTransactions extends Component{\n  render(){\n    return(\n            <div className=\"card bg-dark text-white\">\n              <div className=\"card-header\">\n                MyTransactions\n              </div>\n              <div className=\"card-body\">\n                <Tabs defaultActiveKey=\"trades\" className=\"bg-dark text-white\">\n                  <Tab eventKey=\"trades\" title=\"Trades\" className=\"bg-dark\">\n                    <table className=\"table table-dark table-sm small\">\n                      <thead>\n                        <tr>\n                          <th>Time</th>\n                          <th>ESKO</th>\n                          <th>ESKO/ETH</th>\n                        </tr>\n                      </thead>\n                       { this.props.showMyFilledOrders ? showMyFilledOrders(this.props) : <Spinner type=\"table\" />}\n                    </table>\n                  </Tab>\n                  <Tab eventKey=\"orders\" title=\"Orders\">\n                    <table className=\"table table-dark table-sm small\">\n                      <thead>\n                        <tr>\n                          <th>Amount</th>\n                          <th>ESKO/ETH</th>\n                          <th>Cancel</th>\n                        </tr>\n                      </thead>\n                       { this.props.showMyOpenOrders ? showMyOpenOrders(this.props) : <Spinner type=\"table\" />}\n                    </table>\n                  </Tab>\n                </Tabs>                  \n              </div>\n            </div>\n        )\n  }\n}\n\nfunction mapStateToProps(state){\n  const myOpenOrdersLoaded = myOpenOrdersLoadedSelector(state)\n  const orderCancelling = orderCancellingSelector(state)\n\n  return{\n   myFilledOrders: myFilledOrdersSelector(state),\n   showMyFilledOrders: myFilledOrdersLoadedSelector(state),\n   myOpenOrders: myOpenOrdersSelector(state),\n   showMyOpenOrders: myOpenOrdersLoaded && !orderCancelling,\n   exchange: exchangeSelector(state),\n   account: accountSelector(state)\n  }\n}\nexport default connect(mapStateToProps)(MyTransactions);\n","export const chartOptions = {\n  chart: {\n    animations: { enabled: true },\n    toolbar: { show: false },\n    width: '100px',\n    type: 'candlestick'\n  },\n  plotOptions: {\n    candlestick: {\n      colors: {\n        upward: '#00B746',\n        downward: '#EF403C'\n      },\n      wick: {\n        useFillColor: true\n      }\n    }\n  },\n  tooltip: {\n    enabled: true,\n    theme: false,\n    style: {\n      fontSize: '12px',\n      fontFamily: undefined\n    },\n    x: {\n        show: false,\n        format: 'dd MMM',\n        formatter: undefined,\n    },\n    y: {\n      show: true,\n      title: 'price'\n    },\n    marker: {\n      show: false,\n    },\n    items: {\n       display: 'flex',\n    },\n    fixed: {\n        enabled: false,\n        position: 'topRight',\n        offsetX: 0,\n        offsetY: 0,\n    },\n  },\n  xaxis: {\n    type: 'datetime',\n    labels: {\n      show: true,\n      style: {\n          colors: '#fff',\n          fontSize: '8px',\n          cssClass: 'apexcharts-xaxis-label',\n      },\n    },\n  },\n  yaxis: {\n    labels: {\n      show: true,\n      minWidth: 0,\n      maxWidth: 160,\n      style: {\n        color: '#fff',\n        fontSize: '8px',\n        cssClass: 'apexcharts-yaxis-label',\n      },\n      offsetX: 0,\n      offsetY: 0,\n      rotate: 0,\n    }\n  }\n}\n\nexport const dummyData = [\n  {\n    data: [\n      {\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      },\n      {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      },\n      {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      },\n      {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      },\n      {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      },\n      {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      },\n      {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      },\n      {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      },\n      {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      },\n      {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      },\n      {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      },\n      {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      },\n      {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      },\n      {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      },\n      {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      },\n      {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      },\n      {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      },\n      {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      },\n      {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      },\n      {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      },\n      {\n        x: new Date(1538814600000),\n        y: [6615.53, 6617.93, 6610, 6615.19]\n      },\n      {\n        x: new Date(1538816400000),\n        y: [6615.19, 6621.6, 6608.2, 6620]\n      },\n      {\n        x: new Date(1538818200000),\n        y: [6619.54, 6625.17, 6614.15, 6620]\n      },\n      {\n        x: new Date(1538820000000),\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\n      },\n      {\n        x: new Date(1538821800000),\n        y: [6625.95, 6626, 6611.66, 6617.58]\n      },\n      {\n        x: new Date(1538823600000),\n        y: [6619, 6625.97, 6595.27, 6598.86]\n      },\n      {\n        x: new Date(1538825400000),\n        y: [6598.86, 6598.88, 6570, 6587.16]\n      },\n      {\n        x: new Date(1538827200000),\n        y: [6588.86, 6600, 6580, 6593.4]\n      },\n      {\n        x: new Date(1538829000000),\n        y: [6593.99, 6598.89, 6585, 6587.81]\n      },\n      {\n        x: new Date(1538830800000),\n        y: [6587.81, 6592.73, 6567.14, 6578]\n      },\n      {\n        x: new Date(1538832600000),\n        y: [6578.35, 6581.72, 6567.39, 6579]\n      },\n      {\n        x: new Date(1538834400000),\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\n      },\n      {\n        x: new Date(1538836200000),\n        y: [6575.96, 6589, 6571.77, 6588.92]\n      },\n      {\n        x: new Date(1538838000000),\n        y: [6588.92, 6594, 6577.55, 6589.22]\n      },\n      {\n        x: new Date(1538839800000),\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\n      },\n      {\n        x: new Date(1538841600000),\n        y: [6597.5, 6600, 6588.39, 6596.25]\n      },\n      {\n        x: new Date(1538843400000),\n        y: [6598.03, 6600, 6588.73, 6595.97]\n      },\n      {\n        x: new Date(1538845200000),\n        y: [6595.97, 6602.01, 6588.17, 6602]\n      },\n      {\n        x: new Date(1538847000000),\n        y: [6602, 6607, 6596.51, 6599.95]\n      },\n      {\n        x: new Date(1538848800000),\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\n      },\n      {\n        x: new Date(1538850600000),\n        y: [6591.02, 6603.08, 6591, 6591]\n      },\n      {\n        x: new Date(1538852400000),\n        y: [6591, 6601.32, 6585, 6592]\n      },\n      {\n        x: new Date(1538854200000),\n        y: [6593.13, 6596.01, 6590, 6593.34]\n      },\n      {\n        x: new Date(1538856000000),\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\n      },\n      {\n        x: new Date(1538857800000),\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\n      },\n      {\n        x: new Date(1538859600000),\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\n      },\n      {\n        x: new Date(1538861400000),\n        y: [6596.25, 6604.2, 6590, 6602.99]\n      },\n      {\n        x: new Date(1538863200000),\n        y: [6602.99, 6606, 6584.99, 6587.81]\n      },\n      {\n        x: new Date(1538865000000),\n        y: [6587.81, 6595, 6583.27, 6591.96]\n      },\n      {\n        x: new Date(1538866800000),\n        y: [6591.97, 6596.07, 6585, 6588.39]\n      },\n      {\n        x: new Date(1538868600000),\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\n      },\n      {\n        x: new Date(1538870400000),\n        y: [6596.44, 6601, 6590, 6596.55]\n      },\n      {\n        x: new Date(1538872200000),\n        y: [6598.91, 6605, 6596.61, 6600.02]\n      },\n      {\n        x: new Date(1538874000000),\n        y: [6600.55, 6605, 6589.14, 6593.01]\n      },\n      {\n        x: new Date(1538875800000),\n        y: [6593.15, 6605, 6592, 6603.06]\n      },\n      {\n        x: new Date(1538877600000),\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\n      },\n      {\n        x: new Date(1538879400000),\n        y: [6604.44, 6604.44, 6600, 6603.5]\n      },\n      {\n        x: new Date(1538881200000),\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\n      },\n      {\n        x: new Date(1538883000000),\n        y: [6603.85, 6605, 6600, 6604.07]\n      },\n      {\n        x: new Date(1538884800000),\n        y: [6604.98, 6606, 6604.07, 6606]\n      },\n    ]\n  }\n]\n\n\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport Chart from 'react-apexcharts'\nimport Spinner from './Spinner'\nimport { chartOptions } from \"./PriceChart.config\"\nimport { \n  priceChartLoadedSelector,\n  priceChartSelector        \n} from '../store/selectors'\n\nconst priceSymbol = (lastPriceChange)=>{\n  let output\n  if(lastPriceChange === '+'){\n    output = <span className=\"text-success\">&#9650;</span>//Green up triangle\n  }else{\n    output = <span className=\"text-danger\">&#9660;</span>//Red down triangle\n  }\n  return(output)\n}\n\nconst showPriceChart = (priceChart)=>{\n  return(\n    <div className=\"price-chart\">\n    <div className=\"price\">\n       <h4>ESKO/ETH &nbsp; { priceSymbol(priceChart.lastPriceChange) } &nbsp; { priceChart.lastPrice }</h4>\n    </div>\n    <Chart options={ chartOptions } series={ priceChart.series } type='candlestick' width='100%' height='100%' />\n        </div>\n  )\n}\n\nclass PriceChart extends Component{\n  render(){\n    return(\n              <div className=\"card bg-dark text-white\">\n              <div className=\"card-header\">\n                Price Chart\n              </div>\n              <div className=\"card-body\">\n              { this.props.priceChartLoaded ? showPriceChart(this.props.priceChart) : <Spinner /> }\n              </div>\n            </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n\n  return{\n  priceChartLoaded: priceChartLoadedSelector(state),\n  priceChart: priceChartSelector(state) \n  }\n}\n\nexport default connect(mapStateToProps)(PriceChart)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport Spinner from './Spinner'\nimport {\n  loadBalances,\n  depositEther,\n  depositToken,\n  withdrawEther,\n  withdrawToken\n} from '../store/interactions'\nimport {\n  exchangeSelector,\n  tokenSelector,\n  accountSelector,\n  web3Selector,\n  etherBalanceSelector,\n  tokenBalanceSelector,\n  exchangeEtherBalanceSelector,\n  exchangeTokenBalanceSelector,\n  balancesLoadingSelector,\n  etherDepositAmountSelector,\n  etherWithdrawAmountSelector,\n  tokenDepositAmountSelector,\n  tokenWithdrawAmountSelector,\n} from '../store/selectors'\nimport {\n  etherDepositAmountChanged,\n  etherWithdrawAmountChanged,\n  tokenDepositAmountChanged,\n  tokenWithdrawAmountChanged,\n} from '../store/actions'\nconst showForm = (props) => {\n  const {\n    dispatch,\n    exchange,\n    web3,\n    account,\n    etherBalance,\n    tokenBalance,\n    exchangeEtherBalance,\n    exchangeTokenBalance,\n    etherDepositAmount,\n    token,\n    tokenDepositAmount,\n    etherWithdrawAmount,\n    tokenWithdrawAmount\n  } = props\n\n  return(\n    <Tabs defaultActiveKey=\"deposit\" className=\"bg-dark text-white\">\n\n      <Tab eventKey=\"deposit\" title=\"Deposit\" className=\"bg-dark\">\n        <table className=\"table table-dark table-sm small\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Wallet</th>\n              <th>Exchange</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>ETH</td>\n              <td>{etherBalance}</td>\n              <td>{exchangeEtherBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          depositEther(dispatch, exchange, web3, etherDepositAmount, account)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"ETH Amount\"\n            onChange={(e) => dispatch( etherDepositAmountChanged(e.target.value) ) }\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" className=\"btn btn-info btn-block btn-sm\">Deposit</button>\n          </div>\n        </form>\n\n        <table className=\"table table-dark table-sm small\">\n          <tbody>\n            <tr>\n              <td>ESKO</td>\n              <td>{tokenBalance}</td>\n              <td>{exchangeTokenBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          depositToken(dispatch, exchange, web3, token, tokenDepositAmount, account)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"DAPP Amount\"\n            onChange={(e) => dispatch( tokenDepositAmountChanged(e.target.value) )}\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" className=\"btn btn-info btn-block btn-sm\">Deposit</button>\n          </div>\n        </form>\n\n      </Tab>\n\n      <Tab eventKey=\"withdraw\" title=\"Withdraw\" className=\"bg-dark\">\n\n        <table className=\"table table-dark table-sm small\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Wallet</th>\n              <th>Exchange</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>ETH</td>\n              <td>{etherBalance}</td>\n              <td>{exchangeEtherBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          withdrawEther(dispatch, exchange, web3, etherWithdrawAmount, account)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"ETH Amount\"\n            onChange={(e) => dispatch( etherWithdrawAmountChanged(e.target.value) )}\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" className=\"btn btn-info btn-block btn-sm\">Withdraw</button>\n          </div>\n        </form>\n\n        <table className=\"table table-dark table-sm small\">\n          <tbody>\n            <tr>\n              <td>ESKO</td>\n              <td>{tokenBalance}</td>\n              <td>{exchangeTokenBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" onSubmit={(event) => {\n          event.preventDefault()\n          withdrawToken(dispatch, exchange, web3, token, tokenWithdrawAmount, account)\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"DAPP Amount\"\n            onChange={(e) => dispatch( tokenWithdrawAmountChanged(e.target.value) )}\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" className=\"btn btn-info btn-block btn-sm\">Withdraw</button>\n          </div>\n        </form>\n\n      </Tab>\n    </Tabs>\n  )\n}\n\nclass Balance extends Component {\n  componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const { dispatch, web3, exchange, token, account } = this.props\n    await loadBalances(dispatch, web3, exchange, token, account)\n  }\n\n  render() {\n    return (\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          Balance\n        </div>\n        <div className=\"card-body\">\n          {this.props.showForm ? showForm(this.props) : <Spinner />}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const balancesLoading = balancesLoadingSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    etherBalance: etherBalanceSelector(state),\n    tokenBalance: tokenBalanceSelector(state),\n    exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n    exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n    balancesLoading,\n    showForm: !balancesLoading,\n    etherDepositAmount: etherDepositAmountSelector(state),\n    etherWithdrawAmount: etherWithdrawAmountSelector(state),\n    tokenDepositAmount: tokenDepositAmountSelector(state),\n    tokenWithdrawAmount: tokenWithdrawAmountSelector(state),\n  }\n}\n\nexport default connect(mapStateToProps)(Balance)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport Spinner from './Spinner'\nimport {\n  exchangeSelector,\n  tokenSelector,\n  accountSelector,\n  web3Selector,\n  buyOrderSelector,\n  sellOrderSelector\n} from '../store/selectors'\nimport {\n  buyOrderAmountChanged,\n  buyOrderPriceChanged,\n  sellOrderAmountChanged,\n  sellOrderPriceChanged,\n} from '../store/actions'\nimport {\n  makeBuyOrder,\n  makeSellOrder\n} from '../store/interactions'\n\nconst showForm = (props) => {\n  const {\n    dispatch,\n    buyOrder,\n    exchange,\n    token,\n    web3,\n    account,\n    sellOrder,\n    showBuyTotal,\n    showSellTotal\n  } = props\n\n  return(\n    <Tabs defaultActiveKey=\"buy\" className=\"bg-dark text-white\">\n\n      <Tab eventKey=\"buy\" title=\"Buy\" className=\"bg-dark\">\n\n          <form onSubmit={(event) => {\n            event.preventDefault()\n            makeBuyOrder(dispatch, exchange, token, web3, buyOrder, account)\n          }}>\n          <div className=\"form-group small\">\n            <label>Buy Amount (ESKO)</label>\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                className=\"form-control form-control-sm bg-dark text-white\"\n                placeholder=\"Buy Amount\"\n                onChange={(e) => dispatch( buyOrderAmountChanged( e.target.value ) )}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"form-group small\">\n            <label>Buy Price</label>\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                className=\"form-control form-control-sm bg-dark text-white\"\n                placeholder=\"Buy Price\"\n                onChange={(e) => dispatch( buyOrderPriceChanged( e.target.value ) )}\n                required\n              />\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-info btn-sm btn-block\">Buy Order</button>\n          { showBuyTotal ? <small>Total: {buyOrder.amount * buyOrder.price} ETH</small> : null }\n        </form>\n\n      </Tab>\n\n      <Tab eventKey=\"sell\" title=\"Sell\" className=\"bg-dark\">\n\n        <form onSubmit={(event) => {\n          event.preventDefault()\n          makeSellOrder(dispatch, exchange, token, web3, sellOrder, account)\n        }}>\n        <div className=\"form-group small\">\n          <label>Sell Amount(ESKO)</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control form-control-sm bg-dark text-white\"\n              placeholder=\"Sell amount\"\n              onChange={(e) => dispatch( sellOrderAmountChanged( e.target.value ) )}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group small\">\n          <label>Sell Price</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control form-control-sm bg-dark text-white\"\n              placeholder=\"Sell Price\"\n              onChange={(e) => dispatch( sellOrderPriceChanged( e.target.value ) )}\n              required\n            />\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-info btn-sm btn-block\">Sell Order</button>\n        { showSellTotal ? <small>Total: {sellOrder.amount * sellOrder.price} ETH</small> : null }\n      </form>\n\n      </Tab>\n    </Tabs>\n  )\n}\n\nclass Orders extends Component {\n\n  render() {\n    return (\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          New Order\n        </div>\n        <div className=\"card-body\">\n          {this.props.showForm ? showForm(this.props) : <Spinner />}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const buyOrder = buyOrderSelector(state)\n  const sellOrder = sellOrderSelector(state)\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    buyOrder,\n    sellOrder,\n    showForm: !buyOrder.making && !sellOrder.making,\n    showBuyTotal: buyOrder.amount && buyOrder.price,\n    showSellTotal: sellOrder.amount && sellOrder.price\n  }\n}\n\nexport default connect(mapStateToProps)(Orders)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { exchangeSelector } from '../store/selectors'\nimport { loadAllOrders, subscribeToEvents } from '../store/interactions'\nimport OrderBook from './OrderBook'\nimport Trades from './Trades'\nimport MyTransactions from './MyTransactions'\nimport PriceChart from './PriceChart'\nimport Balance from './Balance'\nimport Orders from './Orders'\n\nclass Content extends Component {\n  componentWillMount() {\n    this.loadBlockchainData(this.props)\n  }\n\n  async loadBlockchainData(props) {\n    const { dispatch, exchange } = props\n    await loadAllOrders(exchange, dispatch)\n    await subscribeToEvents(exchange, dispatch)\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"vertical-split\">\n          <Balance />\n          <Orders />\n        </div>\n        <OrderBook />\n        <div className=\"vertical-split\">\n          <PriceChart />\n          <MyTransactions />\n        </div>\n        <Trades />\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    exchange: exchangeSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(Content)\n\n","import React, { Component } from 'react'\nimport './App.css'\nimport Navbar from './Navbar'\nimport Content from './Content'\nimport { connect } from 'react-redux'\nimport {\n  loadWeb3,\n  loadAccount,\n  loadToken,\n  loadExchange\n} from '../store/interactions'\nimport { contractsLoadedSelector } from '../store/selectors'\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData(this.props.dispatch)\n  }\n\n  async loadBlockchainData(dispatch) {\n    const web3 = await loadWeb3(dispatch)\n    const networkId = await web3.eth.net.getId()\n    await loadAccount(web3, dispatch)\n    const token = await loadToken(web3, networkId, dispatch)\n    if(!token) {\n      window.alert('Token smart contract not detected on the current network. Please select another network with Metamask.')\n      return\n    }\n    const exchange = await loadExchange(web3, networkId, dispatch)\n    if(!exchange) {\n      window.alert('Exchange smart contract not detected on the current network. Please select another network with Metamask.')\n      return\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        { this.props.contractsLoaded ? <Content /> : <div className=\"content\"></div> }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contractsLoaded: contractsLoadedSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n\n","import { combineReducers } from 'redux';\n\nfunction web3(state = {}, action) {  \n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return { ...state,  connection: action.connection }\n    case 'WEB3_ACCOUNT_LOADED':\n      return { ...state, account: action.account }\n    case 'ETHER_BALANCE_LOADED':\n      return { ...state, balance: action.balance }\n//     case 'TOKEN_LOADED':\n//       return { ...state, loaded: true, contract: action.contract }\n//     case 'TOKEN_BALANCE_LOADED':\n//       return { ...state, balance: action.balance }\n//     case 'EXCHANGE_LOADED':\n//       return { ...state, loaded: true, contract: action.contract }\n//     case 'CANCELLED_ORDERS_LOADED':\n//       return { ...state, cancelledOrders: { loaded: true, data: action.cancelledOrders } }\n//     case 'FILLED_ORDERS_LOADED':\n//       return { ...state, filledOrders: { loaded: true, data: action.filledOrders } }\n//     case 'ALL_ORDERS_LOADED':\n//       return { ...state, allOrders: { loaded: true, data: action.allOrders } }\n//     case 'ORDER_CANCELLING':\n//       return { ...state, orderCancelling: true }\n//     case 'ORDER_CANCELLED':\n//       return {\n//         ...state,\n//         orderCancelling: false,\n//         cancelledOrders: {\n//           ...state.cancelledOrders,\n//           data: [\n//             ...state.cancelledOrders.data,\n//             action.order\n//           ]\n//         }\n//       }\n//     case 'ORDER_FILLED':\n//       // Prevent duplicate orders\n//       index = state.filledOrders.data.findIndex(order => order.id === action.order.id);\n\n//       if(index === -1) {\n//         data = [...state.filledOrders.data, action.order]\n//       } else {\n//         data = state.filledOrders.data\n//       }\n\n//       return {\n//         ...state,\n//         orderFilling: false,\n//         filledOrders: {\n//           ...state.filledOrders,\n//           data\n//         }\n//       }\n\n//     case 'ORDER_FILLING':\n//       return { ...state, orderFilling: true }\n\n//     case 'EXCHANGE_ETHER_BALANCE_LOADED':\n//       return { ...state, etherBalance: action.balance }\n//     case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n//       return { ...state, tokenBalance: action.balance }\n//     case 'BALANCES_LOADING':\n//       return { ...state, balancesLoading: true }\n//     case 'BALANCES_LOADED':\n//       return { ...state, balancesLoading: false }\n//     case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n//       return { ...state, etherDepositAmount: action.amount }\n//     case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n//       return { ...state, etherWithdrawAmount: action.amount }\n//     case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n//       return { ...state, tokenDepositAmount: action.amount }\n//     case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n//       return { ...state, tokenWithdrawAmount: action.amount }\n\n//     case 'BUY_ORDER_AMOUNT_CHANGED':\n//       return { ...state, buyOrder: { ...state.buyOrder, amount: action.amount } }\n//     case 'BUY_ORDER_PRICE_CHANGED':\n//       return { ...state, buyOrder: { ...state.buyOrder, price: action.price } }\n//     case 'BUY_ORDER_MAKING':\n//       return { ...state, buyOrder: { ...state.buyOrder, amount: null, price: null, making: true } }\n\n//     case 'ORDER_MADE':\n//       // Prevent duplicate orders\n//       index = state.allOrders.data.findIndex(order => order.id === action.order.id);\n\n//       if(index === -1) {\n//         data = [...state.allOrders.data, action.order]\n//       } else {\n//         data = state.allOrders.data\n//       }\n\n//       return {\n//         ...state,\n//         allOrders: {\n//           ...state.allOrders,\n//           data\n//         },\n//         buyOrder: {\n//           ...state.buyOrder,\n//           making: false\n//         },\n//         sellOrder: {\n//           ...state.sellOrder,\n//           making: false\n//         }\n//       }\n\n//     case 'SELL_ORDER_AMOUNT_CHANGED':\n//       return { ...state, sellOrder: { ...state.sellOrder, amount: action.amount } }\n//     case 'SELL_ORDER_PRICE_CHANGED':\n//       return { ...state, sellOrder: { ...state.sellOrder, price: action.price } }\n//     case 'SELL_ORDER_MAKING':\n//       return { ...state, sellOrder: { ...state.sellOrder, amount: null, price: null, making: true } }\n    default:\n      return state\n  }\n}\n\nfunction token(state = {}, action) {\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return { ...state, loaded: true, contract: action.contract }\n    case 'TOKEN_BALANCE_LOADED':\n      return { ...state, balance: action.balance }\n    default:\n      return state\n  }\n}\n\nfunction exchange(state = {}, action) {\n  let index, data\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return { ...state, loaded: true, contract: action.contract }\n    case 'CANCELLED_ORDERS_LOADED':\n      return { ...state, cancelledOrders: { loaded: true, data: action.cancelledOrders } }\n    case 'FILLED_ORDERS_LOADED':\n      return { ...state, filledOrders: { loaded: true, data: action.filledOrders } }\n    case 'ALL_ORDERS_LOADED':\n      return { ...state, allOrders: { loaded: true, data: action.allOrders } }\n    case 'ORDER_CANCELLING':\n      return { ...state, orderCancelling: true }\n    case 'ORDER_CANCELLED':\n      return {\n        ...state,\n        orderCancelling: false,\n        cancelledOrders: {\n          ...state.cancelledOrders,\n          data: [\n            ...state.cancelledOrders.data,\n            action.order\n          ]\n        }\n      }\n    case 'ORDER_FILLED':\n      // Prevent duplicate orders\n      index = state.filledOrders.data.findIndex(order => order.id === action.order.id);\n\n      if(index === -1) {\n        data = [...state.filledOrders.data, action.order]\n      } else {\n        data = state.filledOrders.data\n      }\n\n      return {\n        ...state,\n        orderFilling: false,\n        filledOrders: {\n          ...state.filledOrders,\n          data\n        }\n      }\n\n    case 'ORDER_FILLING':\n      return { ...state, orderFilling: true }\n\n    case 'EXCHANGE_ETHER_BALANCE_LOADED':\n      return { ...state, etherBalance: action.balance }\n    case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n      return { ...state, tokenBalance: action.balance }\n    case 'BALANCES_LOADING':\n      return { ...state, balancesLoading: true }\n    case 'BALANCES_LOADED':\n      return { ...state, balancesLoading: false }\n    case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n      return { ...state, etherDepositAmount: action.amount }\n    case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n      return { ...state, etherWithdrawAmount: action.amount }\n    case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n      return { ...state, tokenDepositAmount: action.amount }\n    case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n      return { ...state, tokenWithdrawAmount: action.amount }\n\n    case 'BUY_ORDER_AMOUNT_CHANGED':\n      return { ...state, buyOrder: { ...state.buyOrder, amount: action.amount } }\n    case 'BUY_ORDER_PRICE_CHANGED':\n      return { ...state, buyOrder: { ...state.buyOrder, price: action.price } }\n    case 'BUY_ORDER_MAKING':\n      return { ...state, buyOrder: { ...state.buyOrder, amount: null, price: null, making: true } }\n\n    case 'ORDER_MADE':\n      // Prevent duplicate orders\n      index = state.allOrders.data.findIndex(order => order.id === action.order.id);\n\n      if(index === -1) {\n        data = [...state.allOrders.data, action.order]\n      } else {\n        data = state.allOrders.data\n      }\n\n      return {\n        ...state,\n        allOrders: {\n          ...state.allOrders,\n          data\n        },\n        buyOrder: {\n          ...state.buyOrder,\n          making: false\n        },\n        sellOrder: {\n          ...state.sellOrder,\n          making: false\n        }\n      }\n\n    case 'SELL_ORDER_AMOUNT_CHANGED':\n      return { ...state, sellOrder: { ...state.sellOrder, amount: action.amount } }\n    case 'SELL_ORDER_PRICE_CHANGED':\n      return { ...state, sellOrder: { ...state.sellOrder, price: action.price } }\n    case 'SELL_ORDER_MAKING':\n      return { ...state, sellOrder: { ...state.sellOrder, amount: null, price: null, making: true } }\n\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  web3,\n  token,\n  exchange\n})\n\nexport default rootReducer\n\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\nconst middleware = []\n\n// For Redux Dev Tools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(applyMiddleware(...middleware, loggerMiddleware))\n  )\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App'\nimport configureStore from './store/configureStore'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\n"],"sourceRoot":""}